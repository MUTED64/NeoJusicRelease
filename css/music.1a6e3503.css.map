{"version":3,"sources":["webpack:///src/components/src/components/Lyrics.vue","webpack:///src/components/src/components/PageHeader.vue","webpack:///src/components/src/components/PickListItem.vue","webpack:///src/components/src/components/NoneState.vue"],"names":[],"mappings":"AAgGA,kBACA,WAAA,CACA,UAAA,CACA,eAAA,CACA,oBAAA,CACA,cAAA,CACA,sBACA,CAEA,+BACA,gBACA,CAEA,8BACA,mBACA,CAEA,qCACA,YACA,CAEA,aACA,cAAA,CACA,YAAA,CACA,kBAAA,CACA,eAAA,CACA,oBACA,CAEA,eACA,eAAA,CACA,cAAA,CACA,UACA,CAEA,gBAGA,iBAAA,CACA,eAAA,CACA,+BAAA,CACA,iBAAA,CACA,kCAAA,CAAA,0BACA,CCpGA,wCD6FA,UAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YClFA,CAZA,wBACA,cAAA,CACA,KAAA,CAEA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,QAAA,CACA,cAAA,CACA,iBAAA,CAEA,gBAAA,CACA,oBAAA,CAAA,gBAAA,CACA,SACA,CAEA,oBACA,UAAA,CACA,cAAA,CACA,QAAA,CACA,SAAA,CACA,kBAAA,CAAA,iBAAA,CAAA,aAAA,CACA,eAAA,CACA,gBACA,CAEA,oCACA,oBACA,cAAA,CACA,gBACA,CAEA,wBACA,QAAA,CACA,iBAAA,CACA,yCAAA,CAAA,iCACA,CAEA,gDACA,UAAA,CACA,WACA,CACA,CAEA,wBAGA,OACA,CCvBA,yDDoBA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBCbA,CARA,iCAGA,QAAA,CACA,yBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,6BAAA,CACA,+BAAA,CACA,iBACA,CAEA,sCACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CACA,kBAAA,CAAA,iBAAA,CAAA,aAAA,CACA,QAAA,CACA,WACA,CAEA,wDACA,uBAAA,CAAA,eACA,CAEA,sCACA,eAAA,CACA,kBAAA,CAAA,UAAA,CAAA,MACA,CAEA,+EACA,cAAA,CACA,eAAA,CACA,sBAAA,CACA,kBAAA,CACA,WACA,CAEA,yCACA,aACA,CAEA,uCACA,cAAA,CACA,aAAA,CACA,kBAAA,CAAA,UAAA,CAAA,MAAA,CACA,WAAA,CACA,eAAA,CACA,sBAAA,CACA,kBACA,CAEA,uCACA,cAAA,CACA,eACA,CAEA,iFACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,QACA,CAEA,wCACA,aAAA,CACA,cAAA,CACA,aAAA,CACA,kBAAA,CAAA,iBAAA,CAAA,aACA,CAEA,gDACA,UAAA,CACA,WACA,CC3GA,qBACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,iBAAA,CACA,cAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,+BAAA,CACA,iBACA","file":"music.1a6e3503.css","sourcesContent":["<template>\r\n  <div style=\"width:100%;\">\r\n    <div class=\"flex-title\">歌词</div>\r\n    <div class=\"lyrics-wrapper\" :style=\"'height:' + containerHeight + 'px;'\">\r\n      <div class=\"lyrics-container\" ref=\"container\">\r\n        <div class=\"lyrics-line\" v-for=\"(value, key) in finalLyrics\" :key=\"key\"\r\n          :class=\"{ 'lyrics-active': activeLine == key }\">{{ value.trim() }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    lyrics: {\r\n      type: Object,\r\n      default: { 0: \"暂无歌词\" }\r\n    },\r\n    currentTime: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    lineHeight: {\r\n      type: Number,\r\n      default: 30,\r\n    },\r\n    containerHeight: {\r\n      type: Number,\r\n      default: 250,\r\n    },\r\n  },\r\n  data() {\r\n    return { lastNumber: 0 }\r\n  },\r\n  computed: {\r\n    activeLine() {\r\n      const { lyrics, currentTime } = this;\r\n      const lastIndex = lyrics.length - 1;\r\n\r\n      // 如果 currentTime 大于最后一行的时间，激活最后一行\r\n      //   if (currentTime >= lyrics[lastIndex].time) {\r\n      //     return lastIndex;\r\n      //   }\r\n\r\n      // 查找当前时间所在的行\r\n      if (lyrics.length === 0) {\r\n\r\n      } else {\r\n        let number = Number(currentTime.toFixed());\r\n        if (lyrics[number] !== undefined && lyrics[number] !== \"\") {\r\n          this.lastNumber = number;\r\n          return number;\r\n        } else {\r\n          return this.lastNumber;\r\n        }\r\n\r\n      }\r\n\r\n      return 0;\r\n    },\r\n    finalLyrics() {\r\n      if (!this.lyrics) {\r\n        return { 0: \"暂无歌词\" }\r\n      } else if (JSON.stringify(this.lyrics).indexOf(\"纯音乐，请欣赏\") !== -1) {\r\n        return { 0: \"纯音乐，请欣赏\" }\r\n      } else {\r\n        return this.lyrics\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    activeLine(val) {\r\n      if (val !== -1) {\r\n        this.$nextTick(() => {\r\n          this.scrollToActiveLine();\r\n        });\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    scrollToActiveLine() {\r\n      const { activeLine, lineHeight } = this;\r\n      const container = this.$refs.container;\r\n      const lineEl = this.$el.querySelector('.lyrics-active');\r\n\r\n      if (lineEl && container) {\r\n        const offsetTop = lineEl.offsetTop;\r\n        container.scrollTop = offsetTop - lineHeight * 4 + 8;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.lyrics-container {\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n  scrollbar-width: none;\r\n  padding: 0 24px;\r\n  scroll-behavior: smooth;\r\n}\r\n\r\n.lyrics-container > *:first-child {\r\n  margin-top: 110px;\r\n}\r\n\r\n.lyrics-container > *:last-child {\r\n  margin-bottom: 110px;\r\n}\r\n\r\n.lyrics-container::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.lyrics-line {\r\n  font-size: 16px;\r\n  color: #c0c0c0;\r\n  margin-bottom: 10px;\r\n  text-align: left;\r\n  white-space: pre-wrap;\r\n}\r\n\r\n.lyrics-active {\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  color: white;\r\n}\r\n\r\n.lyrics-wrapper {\r\n  width: 100%;\r\n  display: flex;\r\n  border-radius: 8px;\r\n  margin: 0 0 16px;\r\n  background: #80808040;\r\n  position: relative;\r\n  backdrop-filter: blur(60px);\r\n}\r\n</style>","<template>\r\n    <header>\r\n        <mu-icon left color=\"white\" value=\"library_music\" :size=\"isMobile ? 32 : 48\"></mu-icon>\r\n        <h1 class=\"ellipsis\" @click=\"$emit('openHouse')\">{{ title }}</h1>\r\n        <div class=\"right\">\r\n            <mu-button fab :small=\"isMobile\" color=\"primary\" class=\"button-wrapper\" @click=\"$emit('showHelp')\">\r\n                <mu-icon value=\"help_outline\" color=\"white\" :size=\"isMobile ? 32 : 48\"></mu-icon>\r\n            </mu-button>\r\n            <mu-button fab :small=\"isMobile\" color=\"primary\" class=\"button-wrapper\" @click=\"$emit('showAbout')\">\r\n                <mu-icon value=\"info_outline\" color=\"white\" :size=\"isMobile ? 32 : 48\"></mu-icon>\r\n            </mu-button>\r\n        </div>\r\n    </header>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"PageHeader\",\r\n    data() {\r\n        return {\r\n            isMobile: false\r\n        }\r\n    },\r\n    mounted() {\r\n        this.isMobile = document.body.clientWidth < 768;\r\n        window.addEventListener('resize', () => {\r\n            this.isMobile = document.body.clientWidth < 768;\r\n        })\r\n    },\r\n    props: {\r\n        title: {\r\n            type: String,\r\n            default: \"一起听歌吧\"\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nheader {\r\n    position: fixed;\r\n    top: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 16px;\r\n    margin: 0 192px;\r\n    padding: 32px 32px;\r\n    width: 100%;\r\n    max-width: 1536px;\r\n    flex-wrap: nowrap;\r\n    z-index: 5;\r\n}\r\n\r\nh1 {\r\n    color: white;\r\n    font-size: 42px;\r\n    margin: 0;\r\n    padding: 0;\r\n    flex: 1 1 auto;\r\n    font-weight: bold;\r\n    line-height: 64px;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n    h1 {\r\n        font-size: 28px;\r\n        line-height: 40px;\r\n    }\r\n\r\n    header {\r\n        margin: 0;\r\n        padding: 16px 32px;\r\n        box-shadow: 0 0 8px #00000080;\r\n    }\r\n    \r\n    .mu-fab-button.mu-button-small {\r\n        width: 32px;\r\n        height: 32px;\r\n    }\r\n}\r\n\r\n.right {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 4px;\r\n}\r\n</style>","<template>\r\n    <div>\r\n        <div class=\"pick-list-item\">\r\n            <div class=\"pick-list-item-index\">{{ index + 1 }}</div>\r\n            <div class=\"pick-list-item-info\">\r\n                <div class=\"pick-list-item-primary\">\r\n                    <div class=\"pick-list-item-name ellipsis\">{{ item.name }}</div>\r\n                    <div class=\"pick-list-item-artists ellipsis\">{{ item.artist }}</div>\r\n                </div>\r\n                <div class=\"pick-list-item-detail\">\r\n                    <div class=\"pick-list-item-album ellipsis\">{{ item.album.name }}</div>\r\n                    <div class=\"pick-list-item-picker ellipsis\">by {{ nickName }}</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"pick-list-item-upvote\">\r\n                <mu-button fab small color=\"primary\" class=\"button-wrapper\" @click=\"upvote\">\r\n                    <mu-icon value=\"arrow_circle_up\" color=\"white\" size=\"28\"></mu-icon>\r\n                </mu-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"PickListItem\",\r\n    props: {\r\n        item: {\r\n            type: Object,\r\n            default: () => {\r\n                return {\r\n                    id: 0,\r\n                    name: \"未知歌曲\",\r\n                    artist: \"佚名\",\r\n                    album: { name: \"专辑名\" },\r\n                    nickName: \"\",\r\n                }\r\n            }\r\n        },\r\n        index: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n    },\r\n    computed: {\r\n        nickName() { \r\n            if (this.item.nickName.indexOf(\"(\")){\r\n                return this.item.nickName.split(\"(\")[0]\r\n            } else {\r\n                return this.item.nickName\r\n            }\r\n        }\r\n    },\r\n    methods:{\r\n        upvote(){\r\n            this.$emit(\"upvote\", this.item.id, this.item.name)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pick-list-item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 16px;\r\n    padding: 8px 12px 8px 20px;\r\n    justify-content: space-between;\r\n    background: #80808040;\r\n    border-radius: 8px;\r\n}\r\n\r\n.pick-list-item-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1 1 auto;\r\n    margin: 0;\r\n    min-width: 0;\r\n}\r\n\r\n.pick-list-item-upvote .button-wrapper {\r\n    box-shadow: none;\r\n}\r\n\r\n.pick-list-item-name {\r\n    font-weight: bold;\r\n    flex: 1;\r\n}\r\n\r\n.pick-list-item-name, .pick-list-item-artists {\r\n    font-size: 16px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    min-width: 0;\r\n}\r\n\r\n.pick-list-item-artists{\r\n    max-width: 45%;\r\n}\r\n\r\n.pick-list-item-album {\r\n    font-size: 16px;\r\n    color: #cfcfcf;\r\n    flex: 1;\r\n    min-width: 0;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n}\r\n\r\n.pick-list-item-index {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n}\r\n\r\n.pick-list-item-primary, .pick-list-item-detail {\r\n    display: flex;\r\n    gap: 16px;\r\n}\r\n\r\n.pick-list-item-picker{\r\n    max-width: 45%;\r\n    font-size: 16px;\r\n    color: #cfcfcf;\r\n    flex: 0 0 auto;\r\n}\r\n\r\n.mu-fab-button.mu-button-small{\r\n    width: 28px;\r\n    height: 28px;\r\n}\r\n</style>","<template>\r\n    <div>\r\n        {{ `😢 ${text}` }}\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"NoneState\",\r\n    props: {\r\n        text: {\r\n            type: String,\r\n            default: \"暂无数据\"\r\n        }\r\n    },\r\n    data() {\r\n        return {}\r\n    },\r\n    computed: {},\r\n    methods: {}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ndiv {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    color: #ccc;\r\n    width: 100%;\r\n    height: 128px;\r\n    background: #80808040;\r\n    border-radius: 8px;\r\n}\r\n</style>"]}